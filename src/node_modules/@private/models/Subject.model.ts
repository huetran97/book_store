import * as mongoose from 'mongoose';
import DomainKnowledge, { DomainKnowledgeModelInterface } from '@private/models/DomainKnowledge.model';

const schema = new mongoose.Schema({
    name: { type: String },
    is_active: { type: Boolean, default: true },
    domain_knowledge: {
        type: mongoose.Schema.Types.ObjectId,
        ref: 'domain_knowledge',
        index: true
    }

});

schema.virtual('id').get(function () {
    return this._id.toHexString();
});

schema.pre('save', async function (next) {
    let err;
    let that: any = this;

    let domain_knowledge = await DomainKnowledge.findOne({ _id: that.domain_knowledge });
    if (!domain_knowledge) {
        err = new Error('Domain Knowledge not found');
        next(err);
    }

});

export interface SubjectModelInterface extends mongoose.Document {
    name: string,
    domain_knowledge: mongoose.Types.ObjectId | DomainKnowledgeModelInterface
    is_active: boolean
}

export default mongoose.model<SubjectModelInterface>('subject', schema, 'subject');