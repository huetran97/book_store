import * as mongoose from 'mongoose';
import { UserModelInterface } from '@private/models/User.model';
import { BookModelInterface } from '@private/models/Book.model';

const schema = new mongoose.Schema({
    user: {
        type: mongoose.Schema.Types.ObjectId,
        ref: 'user',
        index: true
    },
    book: {
        type: mongoose.Schema.Types.ObjectId,
        ref: 'book',
        index: true
    },
    comment: String,
    rate: {type: Number, default: 0}
}, {
    timestamps: {
        createdAt: 'created_at',
        updatedAt: 'updated_at'
    }
});

schema.virtual('id').get(function () {
    return this._id.toHexString();
});

export interface UserReportBookModelInterface extends mongoose.Document {
    user: mongoose.Types.ObjectId | UserModelInterface
    book: mongoose.Types.ObjectId | BookModelInterface
    rate: number
    comment: string
    created_at: Date
    updated_at: Date
}

export default mongoose.model<UserReportBookModelInterface>('user_report_book', schema, 'user_report_book');