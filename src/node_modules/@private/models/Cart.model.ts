import * as mongoose from 'mongoose';
import Book, { BookModelInterface } from '@private/models/Book.model';
import User, { UserModelInterface } from '@private/models/User.model';
import { PromotionModelInterface } from '@private/models/Promotion.model';
import { StoreModelInterface } from '@private/models/Store.model';


const schema = new mongoose.Schema({
    user: {
        type: mongoose.Schema.Types.ObjectId,
        ref: 'user',
        index: true
    },
    book: {
        type: mongoose.Schema.Types.ObjectId,
        ref: 'book',
        index: true
    },
    store: {
        type: mongoose.Schema.Types.ObjectId,
        ref: 'store',
        index: true
    },
    promotion: {
        type: mongoose.Schema.Types.ObjectId,
        ref: 'promotion',
        index: true
    },
    number: { type: Number, default: 0 },
    price: { type: Number, default: 0 },
}, {
    timestamps: {
        createdAt: 'created_at',
        updatedAt: 'updated_at'
    }
});

schema.pre('save', async function (next) {
    let err;
    let that: any = this;

    let book_data = await Book.findOne({ _id: that.book,  $or:[
            { is_active: true },
            {is_active: null}
        ]});
    if (!book_data) {
        err = new Error('Book not found');
        next(err);
    }

    let user_data = await User.findOne({ _id: that.user, is_active: true });
    if (!user_data) {
        err = new Error('User not found');
        next(err);
    }

});

export interface CartModelInterface extends mongoose.Document {
    user: mongoose.Types.ObjectId | UserModelInterface
    store: mongoose.Types.ObjectId | StoreModelInterface
    book: mongoose.Types.ObjectId | BookModelInterface
    promotion: mongoose.Types.ObjectId | PromotionModelInterface
    number: number
    price: number
    created_at: Date,
    updated_at: Date
}

interface CartStaticsInteface extends mongoose.Model<CartModelInterface> {
    CartModelInterface: CartModelInterface
}

export default mongoose.model<CartModelInterface, CartStaticsInteface>('cart', schema, 'cart');