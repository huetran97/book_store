import * as mongoose from 'mongoose';
import service from '@private/services/index';

const schema = new mongoose.Schema({
    name: { type: String, unique: true },
    phone_number: String,
    name_slug: { type: String, index: true },
    is_active: { type: Boolean, default: true },
    address: String,
    latitude: Number,
    longitude: Number
}, {
    timestamps: {
        createdAt: 'created_at',
        updatedAt: 'updated_at'
    }
});

schema.virtual('id').get(function () {
    return this._id.toHexString();
});
schema.pre('save', async function (next) {
    let that: any = this;
    let err;
    if (that.address) {
        let geocoding_data = await service.geocodingApi.getGeocodingData(that.address);
        if (geocoding_data.status === 'OK') {
            that.latitude  = geocoding_data.results[0].geometry.location.lat;
            that.longitude =geocoding_data.results[0].geometry.location.lng;
        }
    }

});


export interface StoreModelInterface extends mongoose.Document {
    name: string
    phone_number: string
    name_slug: string
    is_active: boolean
    address: string
    latitude: number
    longitude: number
    created_at: Date
    updated_at: Date
}

export default mongoose.model<StoreModelInterface>('store', schema, 'store');