import * as mongoose from 'mongoose';
import Language, { LanguageModelInterface } from '@private/models/Language.model';

const schema = new mongoose.Schema({
    name: { type: String, unique: true },
    is_active: { type: Boolean, default: true },
    language: {
        type: mongoose.Schema.Types.ObjectId,
        ref: 'language',
        index: true
    }
});

schema.virtual('id').get(function () {
    return this._id.toHexString();
});

schema.pre('save', async function (next) {
    let err;
    let that: any = this;

    let language = await Language.findOne({ _id: that.language });
    if (!language) {
        err = new Error('Language not found');
        next(err);
    }

});

export interface DomainKnowledgeModelInterface extends mongoose.Document {
    name: string
    language: mongoose.Types.ObjectId | LanguageModelInterface
    is_active: boolean
}

export default mongoose.model<DomainKnowledgeModelInterface>('domain_knowledge', schema, 'domain_knowledge');